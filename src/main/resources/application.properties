spring.application.name=login-auth-api
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
#spring.datasource.url=${DATABASE_URL}
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true


## DB config Mysql Local ###
#spring.datasource.url=jdbc:mysql://localhost:3306/testdb
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=felipe
#spring.datasource.password=Felipe@2025
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

### Email Configuration ###
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=chucksoares16@gmail.com
#spring.mail.password=34515249
spring.mail.password=xfyktnmpjlpjmfms
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
MAIL_FROM_ADDRESS=chucksoares16@gmail.com
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.debug=true

### Login with Google
### Login with Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=https://plan-paty-back-felipe.onrender.com/login/oauth2/code/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo




api.security.token.secret = my-secret-key